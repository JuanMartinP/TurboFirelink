Turbo Assembler	 Version 2.0	    04/02/19 18:24:18	    Page 1
pract3a.ASM



      1				     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      2				     ;			     SBM 2016. Practica	3 - Apartado a				     ;
      3				     ;	 Pareja	7 - Miguel Manzano y Juan Martin				     ;
      4				     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      5
      6	0000			     _TEXT SEGMENT BYTE	PUBLIC 'CODE'		     ;;	Definición del	segmento de código
      7				     ASSUME CS:_TEXT
      8
      9
     10					     PUBLIC _computeControlDigit
     11	0000				     _computeControlDigit PROC FAR
     12
     13	0000  55				     PUSH BP						     ;guardar el valor de BP+
     14				     para el final de la funcion
     15	0001  8B EC				     MOV BP, SP						     ;Movemos sp a la parte +
     16				     final de la pila
     17	0003  53 51 52 56 57 1E	06		     PUSH BX CX	DX SI DI DS ES
     18
     19	000A  C4 5E 06				     LES BX, [BP+6]				     ;offset de	la cadena de	    +
     20				     caracteres	en BX y	segmento en ES
     21
     22	000D  BE 0000				     MOV SI, 0						     ;SI sera nuestro	    +
     23				     contador para ir recorriendo el bucle de impares
     24	0010  B8 0000				     MOV AX, 0						     ;AX sera la variable   +
     25				     donde iremos guardando lo que leamos en cada posicion del bucle
     26	0013  BA 0000				     MOV DX, 0						     ;DX guardaremos la	suma+
     27				     de	los AX
     28
     29	0016					     BUCLE1:						     ;Etiqueta bucle1
     30	0016  26: 8A 00				     MOV AL, ES:[BX][SI]
     31	0019  2C 30				     SUB AL, 48						     ;Conversion de ASCII de+
     32				     decimal
     33	001B  03 D0				     ADD DX, AX
     34	001D  83 C6 02				     ADD SI, 2						     ;Avanzamos	posiciones  +
     35				     en	el bucle
     36	0020  83 FE 0C				     CMP SI, 12						     ;Realizamos la	    +
     37				     comparacion para comprobar	que no llegamos	al final de la cadena de impares
     38	0023  75 F1				     JNE BUCLE1
     39
     40	0025  52				     PUSH DX						     ;guardamos	en la pila  +
     41				     el	resultado de los impares
     42
     43	0026  BE 0001				     MOV SI, 1						     ;Ahora SI ira	    +
     44				     inicializado a 1 para asi ir recorriendo el bucle de pares
     45	0029  B8 0000				     MOV AX, 0
     46	002C  BA 0000				     MOV DX, 0
     47
     48	002F					     BUCLE2:
     49	002F  26: 8A 00				     MOV AL, ES:[BX][SI]
     50	0032  2C 30				     SUB AL, 48
     51	0034  B4 03				     MOV AH, 3
     52	0036  F6 E4				     MUL AH						     ;multiplicamos por	3 y +
     53				     guardamos el resultado en AL
     54	0038  03 D0				     ADD DX, AX
     55	003A  83 C6 02				     ADD SI, 2
     56	003D  83 FE 0D				     CMP SI, 13						     ;ahora comparamos si   +
     57				     llegamos al final de la cadena de pares
Turbo Assembler	 Version 2.0	    04/02/19 18:24:18	    Page 2
pract3a.ASM



     58	0040  75 ED				     JNE BUCLE2
     59
     60
     61	0042  58				     POP AX						     ;Guardo en	AX el	    +
     62				     resultado del bucle1 que habiamos metido em la pila
     63	0043  03 D0				     ADD DX, AX						     ;DX ahora contendra la +
     64				     suma del resultado	de ambos bucles
     65
     66
     67
     68					     ;;CALCULO DE LA DECENA MAS	PROXIMA: 10 - (RESULTADO OBTENIDO % 10)
     69
     70
     71
     72	0045  8B C2				     MOV AX, DX						     ;muevo a AX el	    +
     73				     resultado anterior	para poder realizar divisiones con ese valor
     74	0047  B7 0A				     MOV BH, 10
     75	0049  F6 F7				     DIV BH						     ;divido AX	entre BH y  +
     76				     guardo el resultado en AX,	de forma que en	AL se guarda el	cociente y en AH el resto
     77	004B  8A EC				     MOV CH, AH						     ;guardo el	resto	    +
     78				     obtenido anteriormente en CH
     79
     80	004D  B8 000A				     MOV AX, 10						     ;Por ultimo muevo a AX +
     81				     un	10 para	asi restarlo con el resto obtenido anteriormente
     82	0050  2A C5				     SUB AL, CH						     ;Realizamos la resta y +
     83				     dejamos el	resultado guardado en AX
     84
     85
     86	0052  07 1F 5F 5E 5A 59	5B		     POP ES DS DI SI DX	CX BX
     87	0059  5D				     POP BP
     88	005A  CB				     RET							     ;;	Retorno	de  +
     89				     la	función que nos ha llamado, devolviendo el digito de control calculado	en AX
     90	005B				     _computeControlDigit ENDP
     91
     92
     93
     94
     95					     PUBLIC _decodeBarCode
     96	005B				     _decodeBarCode PROC FAR
     97
     98	005B  55				     PUSH BP							     ;Salvaguardar  +
     99				     BP	en la pila para	poder modificarle sin modificar	su valor
    100	005C  8B EC				     MOV BP, SP							     ;Igualar BP el +
    101				     contenido de SP
    102	005E  53 51 52 56 57 1E	06+		     PUSH BX CX	DX SI DI DS ES AX
    103	      50
    104	0066  C4 5E 06				     LES BX, [BP+6]					 ;Offset de la cadena de    +
    105				     caracteres	original en BX y segmento en ES
    106
    107
    108	0069  B9 000A				     MOV CX, 10							     ;Tres digitos  +
    109				     de	pais
    110	006C  B8 0064				     MOV AX, 100
    111	006F  33 F6				     XOR SI, SI
    112	0071  33 FF				     XOR DI, DI
    113	0073				     CODPAIS:
    114	0073  33 D2				     XOR DX, DX
Turbo Assembler	 Version 2.0	    04/02/19 18:24:18	    Page 3
pract3a.ASM



    115	0075  26: 8A 10				     MOV DL, ES:[BX][SI]				     ;En DX tenemos el	    +
    116				     primer caracter ASCII de pais
    117	0078  80 EA 30				     SUB DL, 48							     ;Convertimos a +
    118				     decimal
    119
    120
    121	007B  50				     PUSH AX
    122	007C  F7 E2				     MUL DX							     ;Lo	    +
    123				     multiplicamos por AX para ponerle los 0 apropiados
    124	007E  8B D0				     MOV DX, AX
    125	0080  03 FA				     ADD DI, DX							     ;Lo guardamos  +
    126				     en	DI
    127
    128	0082  BA 0000				     MOV DX, 0
    129	0085  46				     INC SI
    130	0086  58				     POP AX							     ;Control de    +
    131				     variables de bucle
    132	0087  F7 F1				     DIV CX
    133	0089  3D 0000				     CMP AX, 0
    134	008C  75 E5			     JNE CODPAIS
    135
    136	008E  C4 5E 0A				     LES BX, [BP+10]
    137	0091  26: 89 3F				     MOV WORD PTR ES:[BX], DI
    138
    139
    140	0094  BE 0003				     MOV SI, 3
    141	0097  C4 5E 06				     LES BX, [BP+6]
    142
    143	009A  B9 000A				     MOV CX, 10							     ;Cuatro digitos+
    144				     de	pais
    145	009D  B8 03E8				     MOV AX, 1000
    146	00A0  33 FF				     XOR DI, DI
    147	00A2				     CODEMPRESA:
    148	00A2  33 D2				     XOR DX, DX
    149	00A4  26: 8A 10				     MOV DL, ES:[BX][SI]				     ;En DX tenemos el	    +
    150				     primer caracter ASCII de pais
    151	00A7  80 EA 30				     SUB DL, 48							     ;Convertimos a +
    152				     decimal
    153
    154
    155	00AA  50				     PUSH AX
    156	00AB  F7 E2				     MUL DX							     ;Lo	    +
    157				     multiplicamos por AX para ponerle los 0 apropiados
    158	00AD  8B D0				     MOV DX, AX
    159	00AF  03 FA				     ADD DI, DX							     ;Lo guardamos  +
    160				     en	DI
    161
    162	00B1  BA 0000				     MOV DX, 0
    163	00B4  46				     INC SI
    164	00B5  58				     POP AX							     ;Control de    +
    165				     variables de bucle
    166	00B6  F7 F1				     DIV CX
    167	00B8  3D 0000				     CMP AX, 0
    168	00BB  75 E5			     JNE CODEMPRESA
    169
    170	00BD  C4 5E 0E				     LES BX, [BP+14]
    171	00C0  26: 89 3F				     MOV WORD PTR ES:[BX], DI
Turbo Assembler	 Version 2.0	    04/02/19 18:24:18	    Page 4
pract3a.ASM



    172
    173	00C3  33 FF				     XOR DI,DI
    174				     ; PRODUCT
    175
    176	00C5  33 D2				     XOR DX,DX
    177	00C7  C4 5E 06				     LES BX, [BP+6]
    178	00CA  BE 000B				     MOV SI, 11
    179	00CD  26: 8A 08				     MOV CL, ES:[BX][SI]
    180	00D0  8A ED				     MOV CH, CH
    181	00D2  83 E9 30				     SUB CX, 48
    182
    183	00D5  4E				     DEC SI
    184	00D6  32 E4				     XOR AH,AH
    185	00D8  26: 8A 00				     MOV AL, ES:[BX][SI]
    186	00DB  2D 0030				     SUB AX, 48
    187	00DE  BF 000A				     MOV DI, 10
    188	00E1  F7 E7				     MUL DI
    189	00E3  03 C8				     ADD CX, AX
    190
    191	00E5  4E				     DEC SI
    192	00E6  32 E4				     XOR AH,AH
    193	00E8  26: 8A 00				     MOV AL, ES:[BX][SI]
    194	00EB  2D 0030				     SUB AX, 48
    195	00EE  BF 0064				     MOV DI, 100
    196	00F1  F7 E7				     MUL DI
    197	00F3  03 C8				     ADD CX, AX
    198
    199	00F5  4E				     DEC SI
    200	00F6  32 E4				     XOR AH,AH
    201	00F8  26: 8A 00				     MOV AL, ES:[BX][SI]
    202	00FB  2D 0030				     SUB AX, 48
    203	00FE  BF 03E8				     MOV DI, 1000
    204	0101  F7 E7				     MUL DI
    205	0103  03 C8				     ADD CX, AX
    206
    207	0105  4E				     DEC SI
    208	0106  32 E4				     XOR AH,AH
    209	0108  26: 8A 00				     MOV AL, ES:[BX][SI]
    210	010B  2D 0030				     SUB AX, 48
    211	010E  BF 2710				     MOV DI, 10000
    212	0111  F7 E7				     MUL DI
    213	0113  03 C8				     ADD CX, AX
    214
    215	0115  C4 5E 12				     LES BX, [BP+18]
    216	0118  26: 89 0F				     MOV WORD PTR ES:[BX], CX
    217	011B  BE 0002				     MOV SI, 2
    218	011E  26: 89 10				     MOV WORD PTR ES:[BX][SI], DX
    219
    220						     ; FIN DE PRODUCT
    221
    222	0121  BF 0001				     MOV DI, 1
    223	0124  C4 5E 16				     LES BX, [BP+22]
    224	0127  26: 89 3F				     MOV WORD PTR ES:[BX], DI
    225
    226	012A  58 07 1F 5F 5E 5A	59+		     POP AX ES DS DI SI	DX CX BX
    227	      5B
    228	0132  5D				     POP BP
Turbo Assembler	 Version 2.0	    04/02/19 18:24:18	    Page 5
pract3a.ASM



    229	0133  CB				     RET
    230	0134				     _decodeBarCode ENDP
    231
    232
    233
    234
    235				     ; FIN DEL SEGMENTO	DE CODIGO
    236	0134			     _TEXT ENDS
    237				     ; FIN DEL PROGRAMA	INDICANDO DONDE	COMIENZA LA EJECUCION
    238				     END
Turbo Assembler	 Version 2.0	    04/02/19 18:24:18	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??date				  Text	 "04/02/19"
??filename			  Text	 "pract3a "
??time				  Text	 "18:24:18"
??version			  Number 0200
@Cpu				  Text	 0101H
@FileName			  Text	 pract3a
@WordSize			  Text	 2
@curseg				  Text	 _TEXT
BUCLE1				  Near	 _TEXT:0016
BUCLE2				  Near	 _TEXT:002F
CODEMPRESA			  Near	 _TEXT:00A2
CODPAIS				  Near	 _TEXT:0073
_computeControlDigit		  Far	 _TEXT:0000
_decodeBarCode			  Far	 _TEXT:005B

Groups & Segments		  Bit Size Align  Combine Class

_TEXT				  16  0134 Byte	  Public  CODE
